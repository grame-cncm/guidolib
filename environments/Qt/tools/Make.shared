#
# shared makefile designed to be called from $(PROJECT)/build dir
#

TARGET := undefined

system	:= $(shell uname -s)
# normalizes MINGW versions
system := $(shell echo $(system) | grep MINGW > /dev/null && echo MINGW || echo $(system))
ifeq ($(system), Darwin)
	TARGET = macos
	SPEC ?= -spec macx-xcode
	DEST := ..
else
ifeq ($(system), MINGW)
	TARGET = windows
else
ifeq ($(system), Linux)
	TARGET = linux
	DEST := ..
endif
endif
endif

ifeq ($(TARGET), windows)
	PLATFORM ?= $(shell ../../../qt-arch)
	QMAKEWIN ?= $(shell ../../../qt-win32)
	MSVC 	 ?= $(shell ../../../vs-win32)
	COPY := ../..
	OUT = ../../$(PROJECT).exe
	ifeq ($(PLATFORM), x64)
		DEST = win64
	else 
		DEST = win32
	endif
endif

QMAKE    ?= qmake
ROOT    := ..

.PHONY : macos $(DEST) linux

all:
	$(MAKE) -f ../../Make.shared $(TARGET)

undefined:
	$(error System is undefined, not target available)

macos: $(PROJECT)
	@echo ===================================
	@echo Build $(PROJECT) for mac os done
	@echo ===================================

windows: $(PROJECT).exe 
	@echo ===================================
	@echo Build $(PROJECT) for $(DEST) done
	@echo ===================================

linux: $(PROJECT)-linux
	@echo ===================================
	@echo Build $(PROJECT) for linux done
	@echo ===================================

###################
# MacOS part
###################
macos/$(PROJECT).xcodeproj : $(ROOT)/$(PROJECT).pro
	[ -d macos ] || mkdir macos
	cd macos && $(QMAKE) $(SPEC) $(ROOT)/..

$(PROJECT): macos/$(PROJECT).xcodeproj  
	xcodebuild -jobs 8 -project  macos/$(PROJECT).xcodeproj -target $(PROJECT) -configuration Release
	cp -R macos/Release/$(PROJECT)$(APP)  $(DEST) 

###################
# windows part
###################
$(DEST)/$(PROJECT).vcxproj : $(ROOT)/$(PROJECT).pro
	[ -d $(DEST) ] || mkdir $(DEST)
	cd $(DEST) && $(QMAKEWIN) $(SPEC) $(ROOT)/..

$(PROJECT).exe: $(DEST)/$(PROJECT).vcxproj  
	cmd /c "\"$(MSVC)\VC\vcvarsall.bat\" && msbuild $(DEST)/$(PROJECT).vcxproj /maxcpucount:4 /p:Configuration=Release /p:Platform=$(PLATFORM)"
	cp  $(DEST)/Release/$(PROJECT).exe $(COPY)

###################
# Linux part
###################
linux/$(PROJECT).makefile : $(ROOT)/$(PROJECT).pro
	[ -d linux ] || mkdir linux
	cd linux && $(QMAKE) $(SPEC) $(ROOT)/.. -o $(PROJECT).makefile

$(PROJECT)-linux: linux/$(PROJECT).makefile  
	$(MAKE) -C linux -f $(PROJECT).makefile
	cp -R linux/$(PROJECT)  $(DEST) 

clean:
	rm -rf $(DEST)/$(PROJECT) $(DEST)/$(PROJECT).exe $(DEST)/$(PROJECT).app macos linux
	
